{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","credit","preResult","expression","size","onClicked","num","add","concat","length","setState","onClear","onCE","rem","substring","onTotal","cal","eval","toString","error","className","this","style","fontSize","onClick","bind","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f082ba7e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    credit: \"Alok Shete\",\n    preResult: null,\n    expression: \"\",\n    size: 45,\n  };\n\n  onClicked = (num) => {\n    var add = this.state.expression;\n    add = add.concat(num);\n    if (add.length < 28) {\n      var size = 45;\n      size = size - add.length - 3;\n    } else {\n      size = this.state.size;\n    }\n\n    this.setState({\n      preResult: this.state.preResult,\n      expression: add,\n      size: size,\n    });\n  };\n\n  onClear = () => {\n    this.setState({\n      preResult: \"\",\n      expression: \"\",\n    });\n  };\n\n  onCE = () => {\n    if (this.state.expression !== \"\" || this.state.expression !== \"0\") {\n      var rem = this.state.expression;\n      rem = rem.substring(0, rem.length - 1);\n      var size = 45;\n      size = size - rem.length - 3;\n      this.setState({\n        preResult: this.state.preResult,\n        expression: rem,\n        size: size,\n      });\n    }\n  };\n\n  onTotal = () => {\n    try {\n      var cal = this.state.expression;\n      cal = eval(cal);\n      cal = cal.toString();\n      if (cal.length < 28) {\n        var size = 45;\n        size = size - cal.length - 3;\n      } else {\n        size = this.state.size;\n      }\n      this.setState({\n        preResult: this.state.expression,\n        expression: cal,\n        size: size,\n      });\n    } catch (error) {\n      this.setState({\n        preResult: this.state.expression,\n        expression: \"Error\",\n        size: 45,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"calc-body\">\n          <div className=\"calc-screen\">\n            <div className=\"calc-operation\">\n              {this.state.preResult ? this.state.preResult : this.state.credit}\n            </div>\n            <div className=\"calc-typed\" style={{ fontSize: this.state.size }}>\n              {this.state.expression ? this.state.expression : \"0\"}\n              <span className=\"blink-me\">_</span>\n            </div>\n          </div>\n          <div className=\"calc-button-row\">\n            <div className=\"button c\" onClick={this.onClear.bind(this)}>\n              C\n            </div>\n            <div className=\"button l\" onClick={this.onClicked.bind(this, \"**\")}>\n              ^\n            </div>\n            <div className=\"button l\" onClick={this.onClicked.bind(this, \"%\")}>\n              %\n            </div>\n            <div className=\"button l\" onClick={this.onCE.bind(this)}>\n              CE\n            </div>\n          </div>\n          <div className=\"calc-button-row\">\n            <div className=\"button\" onClick={this.onClicked.bind(this, \"7\")}>\n              7\n            </div>\n            <div className=\"button\" onClick={this.onClicked.bind(this, \"8\")}>\n              8\n            </div>\n            <div className=\"button\" onClick={this.onClicked.bind(this, \"9\")}>\n              9\n            </div>\n            <div className=\"button l\" onClick={this.onClicked.bind(this, \"/\")}>\n              /\n            </div>\n          </div>\n          <div className=\"calc-button-row\">\n            <div className=\"button\" onClick={this.onClicked.bind(this, \"4\")}>\n              4\n            </div>\n            <div className=\"button\" onClick={this.onClicked.bind(this, \"5\")}>\n              5\n            </div>\n            <div className=\"button\" onClick={this.onClicked.bind(this, \"6\")}>\n              6\n            </div>\n            <div className=\"button l\" onClick={this.onClicked.bind(this, \"*\")}>\n              x\n            </div>\n          </div>\n          <div className=\"calc-button-row\">\n            <div className=\"button\" onClick={this.onClicked.bind(this, \"1\")}>\n              1\n            </div>\n            <div className=\"button\" onClick={this.onClicked.bind(this, \"2\")}>\n              2\n            </div>\n            <div className=\"button\" onClick={this.onClicked.bind(this, \"3\")}>\n              3\n            </div>\n            <div className=\"button l\" onClick={this.onClicked.bind(this, \"-\")}>\n              -\n            </div>\n          </div>\n          <div className=\"calc-button-row\">\n            <div className=\"button\" onClick={this.onClicked.bind(this, \"0\")}>\n              0\n            </div>\n            <div className=\"button\" onClick={this.onClicked.bind(this, \".\")}>\n              .\n            </div>\n            <div className=\"button\" onClick={this.onTotal.bind(this)}>\n              =\n            </div>\n            <div className=\"button l\" onClick={this.onClicked.bind(this, \"+\")}>\n              +\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}